// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AzureMarketplace.SaaS
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// This spec details the APIs that enable partners to sell their SaaS
    /// applications in the AppSource marketplace and the Azure Marketplace.
    /// These APIs are a requirement for transactable SaaS offers on the
    /// AppSource and Azure Marketplace.
    /// </summary>
    public partial interface ISaaSFulfillment : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// List subscriptions
        /// </summary>
        /// <remarks>
        /// Lists all the SaaS subscriptions for a publisher.
        /// </remarks>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetAllOperationsWithHttpMessagesAsync(System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Resolve a subscription
        /// </summary>
        /// <remarks>
        /// The resolve endpoint enables the publisher to resolve a marketplace
        /// token to a persistent resource ID. The resource ID is the unique
        /// identifier for a SaaS subscription. When a user is redirected to a
        /// partner's website, the URL contains a token in the query
        /// parameters. The partner is expected to use this token and make a
        /// request to resolve it. The response contains the unique SaaS
        /// subscription ID, name, offer ID, and plan for the resource. This
        /// token is valid for one hour only.
        /// </remarks>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='xMsMarketplaceToken'>
        /// The token query parameter in the URL when the user is redirected to
        /// the SaaS partner's website from Azure (for example,
        /// https://contoso.com/signup?token=..). Note, The URL decodes the
        /// token value from the browser before using it.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> ResolveWithHttpMessagesAsync(System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), string xMsMarketplaceToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List subscriptions
        /// </summary>
        /// <remarks>
        /// Lists all the SaaS subscriptions for a publisher.
        /// </remarks>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetSubscriptionWithHttpMessagesAsync(System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Patch a subscription
        /// </summary>
        /// <remarks>
        /// Use this call to update the plan, the user count (quantity), or
        /// both.
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='apiVersion'>
        /// Version of the API. Possible values include: '2018-08-31',
        /// '2018-09-15'
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Error>> UpdateSubscriptionWithHttpMessagesAsync(object body, System.Guid subscriptionId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete a subscription
        /// </summary>
        /// <remarks>
        /// Unsubscribe and delete the specified subscription.
        /// </remarks>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='apiVersion'>
        /// Version of the API. Possible values include: '2018-08-31',
        /// '2018-09-15'
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Error>> DeleteSubscriptionWithHttpMessagesAsync(System.Guid subscriptionId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List available plans
        /// </summary>
        /// <remarks>
        /// Use this call to find out if there are any private or public offers
        /// for the current publisher.
        /// </remarks>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> ListSubscriptionPlansWithHttpMessagesAsync(System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Activate a subscription
        /// </summary>
        /// <remarks>
        /// Use this call to activate a subscription.
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Error>> ActivateSubscriptionWithHttpMessagesAsync(object body, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List outstanding operations
        /// </summary>
        /// <remarks>
        /// Lists the outstanding operations for the current publisher.
        /// </remarks>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetSubscriptionOperationsWithHttpMessagesAsync(System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get operation status
        /// </summary>
        /// <remarks>
        /// Enables the publisher to track the status of the specified
        /// triggered async operation (such as Subscribe, Unsubscribe,
        /// ChangePlan, or ChangeQuantity).
        /// </remarks>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='operationId'>
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetSubscriptionOperationWithHttpMessagesAsync(System.Guid subscriptionId, System.Guid operationId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update the status of an operation
        /// </summary>
        /// <remarks>
        /// Update the status of an operation to indicate success or failure
        /// with the provided values.
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='operationId'>
        /// </param>
        /// <param name='apiVersion'>
        /// Version of the API. Possible values include: '2018-08-31',
        /// '2018-09-15'
        /// </param>
        /// <param name='xMsRequestid'>
        /// A unique string value for tracking the request from the client,
        /// preferably a GUID. If this value isn't provided, one will be
        /// generated and provided in the response headers.
        /// </param>
        /// <param name='xMsCorrelationid'>
        /// A unique string value for operation on the client. This parameter
        /// correlates all events from client operation with events on the
        /// server side. If this value isn't provided, one will be generated
        /// and provided in the response headers.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Error>> UpdateOperationWithHttpMessagesAsync(object body, System.Guid subscriptionId, System.Guid operationId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
