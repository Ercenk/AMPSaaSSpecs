// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AzureMarketplace.SaaS
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SaaSfulfillmentAPIsversion2.
    /// </summary>
    public static partial class SaaSfulfillmentAPIsversion2Extensions
    {
            /// <summary>
            /// List subscriptions
            /// </summary>
            /// <remarks>
            /// Lists all the SaaS subscriptions for a publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static object GetAllOperations(this ISaaSfulfillmentAPIsversion2 operations, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.GetAllOperationsAsync(xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List subscriptions
            /// </summary>
            /// <remarks>
            /// Lists all the SaaS subscriptions for a publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetAllOperationsAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllOperationsWithHttpMessagesAsync(xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Resolve a subscription
            /// </summary>
            /// <remarks>
            /// The resolve endpoint enables the publisher to resolve a marketplace token
            /// to a persistent resource ID. The resource ID is the unique identifier for a
            /// SaaS subscription. When a user is redirected to a partner's website, the
            /// URL contains a token in the query parameters. The partner is expected to
            /// use this token and make a request to resolve it. The response contains the
            /// unique SaaS subscription ID, name, offer ID, and plan for the resource.
            /// This token is valid for one hour only.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='xMsMarketplaceToken'>
            /// The token query parameter in the URL when the user is redirected to the
            /// SaaS partner's website from Azure (for example,
            /// https://contoso.com/signup?token=..). Note, The URL decodes the token value
            /// from the browser before using it.
            /// </param>
            public static object Resolve(this ISaaSfulfillmentAPIsversion2 operations, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), string xMsMarketplaceToken = default(string))
            {
                return operations.ResolveAsync(xMsRequestid, xMsCorrelationid, xMsMarketplaceToken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Resolve a subscription
            /// </summary>
            /// <remarks>
            /// The resolve endpoint enables the publisher to resolve a marketplace token
            /// to a persistent resource ID. The resource ID is the unique identifier for a
            /// SaaS subscription. When a user is redirected to a partner's website, the
            /// URL contains a token in the query parameters. The partner is expected to
            /// use this token and make a request to resolve it. The response contains the
            /// unique SaaS subscription ID, name, offer ID, and plan for the resource.
            /// This token is valid for one hour only.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='xMsMarketplaceToken'>
            /// The token query parameter in the URL when the user is redirected to the
            /// SaaS partner's website from Azure (for example,
            /// https://contoso.com/signup?token=..). Note, The URL decodes the token value
            /// from the browser before using it.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ResolveAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), string xMsMarketplaceToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ResolveWithHttpMessagesAsync(xMsRequestid, xMsCorrelationid, xMsMarketplaceToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List subscriptions
            /// </summary>
            /// <remarks>
            /// Lists all the SaaS subscriptions for a publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static object GetSubscription(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.GetSubscriptionAsync(subscriptionId, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List subscriptions
            /// </summary>
            /// <remarks>
            /// Lists all the SaaS subscriptions for a publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetSubscriptionAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSubscriptionWithHttpMessagesAsync(subscriptionId, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Patch a subscription
            /// </summary>
            /// <remarks>
            /// Use this call to update the plan, the user count (quantity), or both.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='apiVersion'>
            /// Version of the API. Possible values include: '2018-08-31', '2018-09-15'
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static Error UpdateSubscription(this ISaaSfulfillmentAPIsversion2 operations, object body, System.Guid subscriptionId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.UpdateSubscriptionAsync(body, subscriptionId, apiVersion, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Patch a subscription
            /// </summary>
            /// <remarks>
            /// Use this call to update the plan, the user count (quantity), or both.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='apiVersion'>
            /// Version of the API. Possible values include: '2018-08-31', '2018-09-15'
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Error> UpdateSubscriptionAsync(this ISaaSfulfillmentAPIsversion2 operations, object body, System.Guid subscriptionId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateSubscriptionWithHttpMessagesAsync(body, subscriptionId, apiVersion, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a subscription
            /// </summary>
            /// <remarks>
            /// Unsubscribe and delete the specified subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='apiVersion'>
            /// Version of the API. Possible values include: '2018-08-31', '2018-09-15'
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static Error DeleteSubscription(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.DeleteSubscriptionAsync(subscriptionId, apiVersion, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a subscription
            /// </summary>
            /// <remarks>
            /// Unsubscribe and delete the specified subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='apiVersion'>
            /// Version of the API. Possible values include: '2018-08-31', '2018-09-15'
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Error> DeleteSubscriptionAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteSubscriptionWithHttpMessagesAsync(subscriptionId, apiVersion, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List available plans
            /// </summary>
            /// <remarks>
            /// Use this call to find out if there are any private or public offers for the
            /// current publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static object ListSubscriptionPlans(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.ListSubscriptionPlansAsync(subscriptionId, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List available plans
            /// </summary>
            /// <remarks>
            /// Use this call to find out if there are any private or public offers for the
            /// current publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ListSubscriptionPlansAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListSubscriptionPlansWithHttpMessagesAsync(subscriptionId, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Activate a subscription
            /// </summary>
            /// <remarks>
            /// Use this call to activate a subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static Error ActivateSubscription(this ISaaSfulfillmentAPIsversion2 operations, object body, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.ActivateSubscriptionAsync(body, subscriptionId, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Activate a subscription
            /// </summary>
            /// <remarks>
            /// Use this call to activate a subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Error> ActivateSubscriptionAsync(this ISaaSfulfillmentAPIsversion2 operations, object body, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ActivateSubscriptionWithHttpMessagesAsync(body, subscriptionId, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List outstanding operations
            /// </summary>
            /// <remarks>
            /// Lists the outstanding operations for the current publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static object GetSubscriptionOperations(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.GetSubscriptionOperationsAsync(subscriptionId, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List outstanding operations
            /// </summary>
            /// <remarks>
            /// Lists the outstanding operations for the current publisher.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetSubscriptionOperationsAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSubscriptionOperationsWithHttpMessagesAsync(subscriptionId, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get operation status
            /// </summary>
            /// <remarks>
            /// Enables the publisher to track the status of the specified triggered async
            /// operation (such as Subscribe, Unsubscribe, ChangePlan, or ChangeQuantity).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='operationId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static object GetSubscriptionOperation(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid operationId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.GetSubscriptionOperationAsync(subscriptionId, operationId, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get operation status
            /// </summary>
            /// <remarks>
            /// Enables the publisher to track the status of the specified triggered async
            /// operation (such as Subscribe, Unsubscribe, ChangePlan, or ChangeQuantity).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='operationId'>
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetSubscriptionOperationAsync(this ISaaSfulfillmentAPIsversion2 operations, System.Guid subscriptionId, System.Guid operationId, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSubscriptionOperationWithHttpMessagesAsync(subscriptionId, operationId, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the status of an operation
            /// </summary>
            /// <remarks>
            /// Update the status of an operation to indicate success or failure with the
            /// provided values.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='operationId'>
            /// </param>
            /// <param name='apiVersion'>
            /// Version of the API. Possible values include: '2018-08-31', '2018-09-15'
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            public static Error UpdateOperation(this ISaaSfulfillmentAPIsversion2 operations, object body, System.Guid subscriptionId, System.Guid operationId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?))
            {
                return operations.UpdateOperationAsync(body, subscriptionId, operationId, apiVersion, xMsRequestid, xMsCorrelationid).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the status of an operation
            /// </summary>
            /// <remarks>
            /// Update the status of an operation to indicate success or failure with the
            /// provided values.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='subscriptionId'>
            /// </param>
            /// <param name='operationId'>
            /// </param>
            /// <param name='apiVersion'>
            /// Version of the API. Possible values include: '2018-08-31', '2018-09-15'
            /// </param>
            /// <param name='xMsRequestid'>
            /// A unique string value for tracking the request from the client, preferably
            /// a GUID. If this value isn't provided, one will be generated and provided in
            /// the response headers.
            /// </param>
            /// <param name='xMsCorrelationid'>
            /// A unique string value for operation on the client. This parameter
            /// correlates all events from client operation with events on the server side.
            /// If this value isn't provided, one will be generated and provided in the
            /// response headers.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Error> UpdateOperationAsync(this ISaaSfulfillmentAPIsversion2 operations, object body, System.Guid subscriptionId, System.Guid operationId, string apiVersion, System.Guid? xMsRequestid = default(System.Guid?), System.Guid? xMsCorrelationid = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateOperationWithHttpMessagesAsync(body, subscriptionId, operationId, apiVersion, xMsRequestid, xMsCorrelationid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
